install.packages("haven")
library(haven)
allBusData <- read_dta("data/ZA5280_v2-0-1.dta")
head(allBusData)
View(allBusData)
View(allBusData)
View(allbus)
head(allbus)
allbus <- read_dta("data/ZA5280_v2-0-1.dta")
head(allbus)
print(paste("Anzahl der Befragte in dem Datensatz allBuss ist: ", n_befragte))
#Aufabe 1d
n_befragte <- nrow(allbus)
print(paste("Anzahl der Befragte in dem Datensatz allBuss ist: ", n_befragte))
View(allbus)
print(paste("Anzahl der Befragte in dem Datensatz allBuss ist: ", n_befragte1))
#Aufabe 1d
n_befragte1 <- nrow(allbus)
print(paste("Anzahl der Befragte in dem Datensatz allBuss ist: ", n_befragte1))
print(paste("Anzahl der Befragte in dem Datensatz allBuss ist: ", n_befragte2))
n_befragte2 <- length(allbus$za_nr)
print(paste("Anzahl der Befragte in dem Datensatz allBuss ist: ", n_befragte2))
#Aufabe 1d
n_befragte1 <- nrow(allbus)
print(paste("Anzahl der Befragte in dem Datensatz allBuss ist: ", n_befragte1))
n_befragte2 <- length(allbus$za_nr)
print(paste("Anzahl der Befragte in dem Datensatz allBuss ist: ", n_befragte2))
#Aufgabe 1e
head(allbus, n=3)
#Aufgabe 1f
View(allbus)
typeof(allbus$land)
allbus$land <- as.factor(allbus$land)
typeof(allbus$land)
allbus$land <- as.factor(allbus$land)
typeof(allbus$land)
is.factor(allbus$land)
#Aufgabe 3d
summary(allbus)
#Aufgabe 3d
summary(allbus$land)
?summary()
View(allbus$land)
total_count <- nrow(allbus)
bundeslandcolum <- table(allbus)
nrw_count <- bundeslandcolum["50"]
bundeslandcolum <- table(allbus)
bundeslandcolum <- table(allbus$land)
nrw_count <- bundeslandcolum["50"]
bayer_count <- bundeslandcolum["90"]
proportion <- (nrw_count + bayern_count) / total_count
percent <- proportion * 100
proportion <- (nrw_count + bayern_count) / total_count
nrw_count <- bundeslandcolum["50"]
bayer_count <- bundeslandcolum["90"]
proportion <- (nrw_count + bayern_count) / total_count
bayer_count <- bundeslandcolum["90"]
nrw_count <- bundeslandcolum["50"]
percent <- proportion * 100
percent <- proportion * 100
proportion <- (nrw_count + bayern_count) / total_count
bayer_count <- bundeslandcolum["90"]
bayer_count <- bundeslandcolum["90"]
proportion <- (nrw_count + bayern_count) / total_count
bayern_count <- bundeslandcolum["90"]
proportion <- (nrw_count + bayern_count) / total_count
percent <- proportion * 100
print(precent)
print(percent)
print(percent)
print(percent)
print(percent)
print("Anteil:", proportion, "\n")
print("Prozent:", percent, "%\n")
print(paste("Anteil:", proportion, "\n"))
print(paste("Prozent:", percent, "%\n"))
proportion <- round((nrw_count + bayern_count) / total_count, 3)
percent <- proportion * 100
print(paste("Anteil von NRW oder Bayern:", proportion, "\n"))
print(paste("Anteil von NRW oder Bayern:", proportion ))
print(paste("Prozent von NRW oder Bayern:", percent))
proportionNRW <- round((nrw_count) / total_count, 3)
percentNRW <- proportionNRW * 100
print(paste("Anteil aus NRW:", proportionNRW ))
print(paste("Prozent aus NRW:", percentNRW))
proportionBayern <- round((bayern_count) / total_count, 3)
percentBayern <- proportionBayern * 100
print(paste("Anteil aus Bayern:", proportionBayern ))
print(paste("Prozent aus Bayern:", percentBayern))
proportionNRWOrBayern <- round((nrw_count + bayern_count) / total_count, 3)
percentNRWOrBayern <- proportionNRWOrBayern * 100
print(paste("Anteil von NRW oder Bayern:", proportionNRWOrBayern ))
print(paste("Prozent von NRW oder Bayern:", percentNRWOrBayern))
#Aufgabe 1
#Aufgabe 1b
install.packages("haven")
library(haven)
#Aufgabe 1c
allbus <- read_dta("data/ZA5280_v2-0-1.dta")
#Aufabe 1d
n_befragte1 <- nrow(allbus)
print(paste("Anzahl der Befragte in dem Datensatz allBuss ist: ", n_befragte1))
n_befragte2 <- length(allbus$za_nr)
print(paste("(Alternativ) Anzahl der Befragte in dem Datensatz allBuss ist: ", n_befragte2))
#Aufgabe 1e
head(allbus, n=3)
#Aufgabe 1f
View(allbus)
#Aufgabe 3b
typeof(allbus$land)   #>> double
allbus$land <- as.factor(allbus$land)
is.factor(allbus$land) #>> TRUE
#Aufgabe 3d
#Zusammenfassung
summary(allbus$land)
#Ausgabe:
#10  20  30  40  50  60  70  80  90 100 111 112 120 130 140 150 160
#169 107 426  27 921 313 200 538 699  62  97 174 316 188 514 308 283
#Überblick
View(allbus$land)
total_count <- nrow(allbus)
bundeslandcolum <- table(allbus$land)
nrw_count <- bundeslandcolum["50"]
bayern_count <- bundeslandcolum["90"]
#Aus NRW
# Anteil (Proportion) und Prozent mit 3 Dezimalstellen
proportionNRW <- round((nrw_count) / total_count, 3)
percentNRW <- proportionNRW * 100
print(paste("Anteil aus NRW:", proportionNRW ))
print(paste("Prozent aus NRW:", percentNRW))
#Aus Bayern
# Anteil (Proportion) und Prozent mit 3 Dezimalstellen
proportionBayern <- round((bayern_count) / total_count, 3)
percentBayern <- proportionBayern * 100
print(paste("Anteil aus Bayern:", proportionBayern ))
print(paste("Prozent aus Bayern:", percentBayern))
#Aus NRW oder Bayern
# Anteil (Proportion) und Prozent mit 3 Dezimalstellen
proportionNRWOrBayern <- round((nrw_count + bayern_count) / total_count, 3)
percentNRWOrBayern <- proportionNRWOrBayern * 100
print(paste("Anteil von NRW oder Bayern:", proportionNRWOrBayern ))
print(paste("Prozent von NRW oder Bayern:", percentNRWOrBayern))
print(paste("Anteil aus NRW:", proportionNRW ))
print(paste("Prozent aus NRW:", percentNRW))
print(paste("Anteil aus Bayern:", proportionBayern ))
print(paste("Prozent aus Bayern:", percentBayern))
print(paste("Anteil von NRW oder Bayern:", proportionNRWOrBayern ))
print(paste("Prozent von NRW oder Bayern:", percentNRWOrBayern))
print(paste("Prozent von NRW oder Bayern:", percentNRWOrBayern, "%"))
print(paste("Prozent von NRW oder Bayern:", percentNRWOrBayern,"%"))
apartmentColumn <- table(allbus$wghtpew)
print(apartmentColumn)
print(nrow(apartmentColumn))
print(length(apartmentColumn))
apartmentColumn <- table(allbus$wghtpew)
print(length(apartmentColumn))
apartmentColumn <- table(allbus$aq01)
print(apartmentColumn)
print(eigentumswohnungAnzahl)
eigentumswohnungAnzahl <- apartmentColumn["6"]
print(eigentumswohnungAnzahl)
print(paste("Häufigkeit für Eigenwohnungen: ", eigentumswohnungAnzahl))
print(paste("Häufigkeit für Eigenwohnungen:", eigentumswohnungAnzahl))
untermieteAnzahl <- apartmentColumn["1"]
print(paste("Häufigkeit für Untermiete:", untermieteAnzahl))
eigenheimAnzahl <- apartmentColumn["7"]
print(paste("Häufigkeit für Eigenheim (Häufigste Art):", eigenheimAnzahl))
print(paste("Häufigkeit für Eigenwohnungen:", eigentumswohnungAnzahl))
apartmentColumn <- table(allbus$aq01)
print(apartmentColumn)
library(haven)
#Aufgabe 1c
allbus <- read_dta("data/ZA5280_v2-0-1.dta")
#Aufabe 1d
n_befragte1 <- nrow(allbus)
print(paste("Anzahl der Befragte in dem Datensatz allBuss ist: ", n_befragte1))
n_befragte2 <- length(allbus$za_nr)
print(paste("(Alternativ) Anzahl der Befragte in dem Datensatz allBuss ist: ", n_befragte2))
#Aufgabe 1e
head(allbus, n=3)
#Aufgabe 1f
View(allbus)
#Aufgabe 2e
#table() Befehl wird hier genutzt
apartmentColumn <- table(allbus$aq01)
print(apartmentColumn)
eigentumswohnungAnzahl <- apartmentColumn["6"]
print(paste("Häufigkeit für Eigenwohnungen:", eigentumswohnungAnzahl))
untermieteAnzahl <- apartmentColumn["1"]
print(paste("Häufigkeit für Untermiete:", untermieteAnzahl))
eigenheimAnzahl <- apartmentColumn["7"]
print(paste("Häufigkeit für Eigenheim (Häufigste Art):", eigenheimAnzahl))
#Aufgabe 3b
typeof(allbus$land)   #>> double
allbus$land <- as.factor(allbus$land)
is.factor(allbus$land) #>> TRUE
#Aufgabe 3d
#Zusammenfassung
summary(allbus$land)
#Ausgabe:
#10  20  30  40  50  60  70  80  90 100 111 112 120 130 140 150 160
#169 107 426  27 921 313 200 538 699  62  97 174 316 188 514 308 283
#Überblick
View(allbus$land)
total_count <- nrow(allbus)
bundeslandcolumn <- table(allbus$land)
nrw_count <- bundeslandcolumn["50"]
bayern_count <- bundeslandcolumn["90"]
#Häufigkeit aus Bayern
bayern_count <- bundeslandcolumn["90"]
#Aus NRW
# Anteil (Proportion) und Prozent mit 3 Dezimalstellen
proportionNRW <- round((nrw_count) / total_count, 3)
percentNRW <- proportionNRW * 100
print(paste("Anteil aus NRW:", proportionNRW )) # -> 0.172
print(paste("Prozent aus NRW:", percentNRW,"%")) # ->17.2%
#Aus Bayern
# Anteil (Proportion) und Prozent mit 3 Dezimalstellen
proportionBayern <- round((bayern_count) / total_count, 3)
percentBayern <- proportionBayern * 100
percentBayern <- proportionBayern * 100
print(paste("Anteil aus Bayern:", proportionBayern )) # -> 0.131
print(paste("Prozent aus Bayern:", percentBayern,"%")) # -> 13.1%
#Aus NRW oder Bayern
# Anteil (Proportion) und Prozent mit 3 Dezimalstellen
proportionNRWOrBayern <- round((nrw_count + bayern_count) / total_count, 3)
percentNRWOrBayern <- proportionNRWOrBayern * 100
print(paste("Anteil von NRW oder Bayern:", proportionNRWOrBayern ))  # ->0.303
print(paste("Prozent von NRW oder Bayern:", percentNRWOrBayern,"%")) # -> 30.3%
View(allbus)
View(allbus)
View(allbus)
